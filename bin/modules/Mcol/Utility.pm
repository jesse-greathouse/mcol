#!/usr/bin/env perl

package Mcol::Utility;
use strict;
use Exporter 'import';
use Errno;

our @EXPORT_OK = qw(
  command_result
  get_operating_system
  read_file
  write_file
  trim
  splash
  mcol_splash
  install_the_installer_splash
  str_replace_in_file
  generate_rand_str
  is_pid_running
);

# ====================================
#    Subroutines below this point
# ====================================

# Trim the whitespace from a string.
sub  trim { my $s = shift; $s =~ s/^\s+|\s+$//g; return $s };

# Returns string associated with operating system.
sub get_operating_system {
    my %osNames = (
        MSWin32 => 'Win32',
        NetWare => 'Win32',
        symbian => 'Win32',
        darwin  => 'MacOS'
    );

    return get_linux_distribution() if $^O eq 'linux';

    die "Unsupported operating system: $^O\n" unless exists $osNames{$^O};
    return $osNames{$^O};
}

# Detects the Linux distribution.
sub get_linux_distribution {
    # Map os-release IDs to canonical names we use elsewhere
    my %id_map = (
        rocky                 => 'Rocky',
        centos                => 'CentOS',
        rhel                  => 'RHEL',
        fedora                => 'Fedora',
        ubuntu                => 'Ubuntu',
        debian                => 'Debian',
        'opensuse'            => 'OpenSUSE',
        'opensuse-leap'       => 'OpenSUSE',
        'opensuse-tumbleweed' => 'OpenSUSE',
        arch                  => 'Arch',
        alpine                => 'Alpine',
        gentoo                => 'Gentoo',
        openmandriva          => 'OpenMandriva',
    );

    # Prefer /etc/os-release (modern distros)
    if (open my $fh, '<', '/etc/os-release') {
        my ($id, $id_like);
        while (my $line = <$fh>) {
            chomp $line;
            if ($line =~ /^ID\s*=\s*"?([^"\n]+)"?/)        { $id = lc $1; next }
            if ($line =~ /^ID_LIKE\s*=\s*"?([^"\n]+)"?/)   { $id_like = lc $1; next }
        }
        close $fh;

        if (defined $id && exists $id_map{$id}) {
            return $id_map{$id};
        }
        if (defined $id_like) {
            for my $tok (split /\s+/, $id_like) {
                return $id_map{$tok} if exists $id_map{$tok};
            }
        }
    }

    # Fallbacks
    if (-e '/etc/lsb-release' && open my $fh, '<', '/etc/lsb-release') {
        while (my $line = <$fh>) {
            if ($line =~ /DISTRIB_ID=(\w+)/i) {
                my $id = lc $1;
                close $fh;
                return $id_map{$id} if exists $id_map{$id};
            }
        }
        close $fh;
    }

    if (-e '/etc/redhat-release' && open my $fh, '<', '/etc/redhat-release') {
        while (my $line = <$fh>) {
            return 'Rocky'  if $line =~ /Rocky/i;
            return 'CentOS' if $line =~ /CentOS/i;
            return 'RHEL'   if $line =~ /Red Hat/i;
            return 'Fedora' if $line =~ /Fedora/i;
        }
        close $fh;
    }

    if (-e '/etc/debian_version') {
        return 'Debian';
    }

    my $uname = `uname -a`;
    for my $k (keys %id_map) {
        return $id_map{$k} if $uname =~ /\Q$id_map{$k}\E/i;
    }

    die "Unable to determine Linux distribution.\n";
}

sub str_replace_in_file {
  my ($string, $replacement, $file) = @_;
  my $data = read_file($file);
  $data =~ s/\Q$string/$replacement/g;
  write_file($file, $data);
}

sub read_file {
    my ($filename) = @_;

    open my $in, '<:encoding(UTF-8)', $filename or die "Could not open '$filename' for reading $!";
    local $/ = undef;
    my $all = <$in>;
    close $in;

    return $all;
}

sub write_file {
    my ($filename, $content) = @_;

    open my $out, '>:encoding(UTF-8)', $filename or die "Could not open '$filename' for writing $!";;
    print $out $content;
    close $out;

    return;
}

sub command_result {
    my ($exit, $err, $operation_str, @cmd) = @_;

    if ($exit == -1) {
        print "failed to execute: $err \n";
        exit $exit;
    }
    elsif ($exit & 127) {
        printf "child died with signal %d, %s coredump\n",
            ($exit & 127),  ($exit & 128) ? 'with' : 'without';
        exit $exit;
    }
    else {
        print "$operation_str success!\n";
    }
}

sub generate_rand_str {
    my ($length) = @_;

    if (!defined $length) {
        $length = 64;
    }

    my @set = ('0' ..'9', 'A' .. 'F');
    my $str = join '' => map $set[rand @set], 1 .. $length;
    return $str;
}

sub is_pid_running {
    my ($pidFile) = @_;

    open my $fh, '<', $pidFile or die "Can't open $pidFile $!";
    my $pid = do { local $/; <$fh> };

    my $not_running=(!kill(0,$pid) && $! == Errno::ESRCH);

    return(!$not_running);
}

# Prints a spash screen message.
sub splash {
  print (''."\n");
  print ('+--------------------------------------------------------------------------------------+'."\n");
  print ('| Thank you for choosing mcol                                                          |'."\n");
  print ('+--------------------------------------------------------------------------------------+'."\n");
  print ('| Copyright (c) 2023 Jesse Greathouse (https://github.com/jesse-greathouse/mcol)       |'."\n");
  print ('+--------------------------------------------------------------------------------------+'."\n");
  print ('| mcol is free software: you can redistribute it and/or modify it under the            |'."\n");
  print ('| terms of thethe Free Software Foundation, either version 3 of the License, or GNU    |'."\n");
  print ('| General Public License as published by (at your option) any later version.           |'."\n");
  print ('|                                                                                      |'."\n");
  print ('| mcol is distributed in the hope that it will be useful, but WITHOUT ANY              |'."\n");
  print ('| WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A      |'."\n");
  print ('| PARTICULAR PURPOSE.  See the GNU General Public License for more details.            |'."\n");
  print ('|                                                                                      |'."\n");
  print ('| You should have received a copy of the GNU General Public License along with         |'."\n");
  print ('| mcol. If not, see <http://www.gnu.org/licenses/>.                                    |'."\n");
  print ('+--------------------------------------------------------------------------------------+'."\n");
  print ('| Author: Jesse Greathouse <jesse.greathouse@gmail.com>                                |'."\n");
  print ('+--------------------------------------------------------------------------------------+'."\n");
  print (''."\n");
}

sub install_the_installer_splash {
  print (''."\n");
  print ('%%%%%%%%%@@@@@%#####=..:=+*+=-:-+##*#%%+%%%##*************++-.......-============-==+*++*=+++*###%%%%%@@@@@@@@@@@@@@@%@@@@@%%%%'."\n");
  print ('@@%%%%%@@@@@@@%###=....-+*##%@@%#%@@@@@@@@@@@@@#************+...+@%@@@@%===--+++++**=++*#****#%%%%%#%%@@@@@@@@@@#...%@%...@@@@%'."\n");
  print ('@@@@@@@@@@@@@@%#*-...:=+***#%@@@@@@...........=@*************...*......@+=-==+++===+*+++*##%%@@%-:@%%@@@@@@@@@@@*...%@#...@@@@@'."\n");
  print ('@@@@@@@@@@@@@@%+-...:==+*%%@@%@@@@@@@@@...+@@@@@#%%%%%%%#****+...@=...@%%%#**##%%#*++#@%%%@@@@-...@@@@@@@@@@@@@@*...%@#...@@@@@'."\n");
  print ('@@@@@@@@@@@@@%=....-=+#%#%@@@@@@@@@@@@@...*%##%@@........@%**+...@=...@#-...:.....@*%......=@.......@@.......+@@*...%@#...@@@@@'."\n");
  print ('@@@@@@@@@@@@@*.:==+*%%*%@@%@@@@@@@@%@@@...*%**#@...=@@-...##++:..@=...@#-...-@@...*@:..=@@@@@@:...@@@@+@@@@...#@*...%@#...@@@@@'."\n");
  print ('@@@@@@@@@@@@%-.:+**#+=*%%%%%%%%%%%%%%%@...*%**@...:@#*@....%++-..%=...@#-...#=@...+@%.....:@%%-...@@@@=.......=@*...%@#...@@@@@'."\n");
  print ('@@@@@@@@@@@@*+==+%%#*#%%#***##########@...*%**%-...@%%%...-%++=..@=...@%-...#+@...+@@@@=....@@-...@@@...#@@...=@*...%@#...@@@@@'."\n");
  print ('@@@@@@@@@@@%++=++*#*+**+++****########@...*%***@.........:@++++.#......@-...#=@...+@:.......@@+.....@.........=@*...%@#...@@@@@'."\n");
  print ('@@@@@@@@@@@%*++==***++*+++****########@...%#****#@*....#@#+++++-%......@*..-%=@=..#@%....:%@#%@@....@@*...@+..#@%..:@@@..-@@@@@'."\n");
  print ('@@@@@@@@@@@%#*+==*++=+**++*****#****************+*+++=*+++++++++:-++++++++++++++++**#######%%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'."\n");
  print ('@@@@@@@@@@@@#*+=++****************#***************##*++++++++++++++++++++++++++=-=++**###%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'."\n");
  print ('%@@@@@@@@@@@#*##*++*####************************#%%%#*++++++=====++++++++++++++=..=+++***#%%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'."\n");
  print ('%%%%%%%%@@@@%##*+=+#***#**********************#%#**++++==========++++++++++++++-..--==++*#%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'."\n");
  print ('%%%%%%%%%%%@@#*+++*+**#********########******#######*++=-----:::-++++==========-::-===+**#%%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'."\n");
  print ('#########%%%@%*+*#####*******#%%%%%#####*****####**++++=..........:..............-=+++++*###%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'."\n");
  print ('#########%%%@@#=+*%%##*****########%%%%##**#*********+++..........................-+++===+*%%@@@@@@%%%@@@@@@@@@@@@@@@@@@@@@@@@@'."\n");
  print ('#######%%%%@@@###+*+++********###########*************++:...........................:=+===+*%@@@@@%##+#%@@@@@@@@@@@@@@@@@@@@@@@'."\n");
  print ('%%%%%%%%%@@@@@@##***+++***********#####****************+=:::::::::::::---------------:-=+=+*#%@@@%#****#%@@@@@@@@@@@@@@@@@@@@@@'."\n");
  print ('@@@@@@@@@@@@@@@@*####=-+++**+*****#####********+******+++:::::::--------============-:-+++++#%@@%#*****##@@@@@@@@@@@@@@@@@@@@@@'."\n");
  print ('@@@@@@@@@@@@@@@@@*###*--=++++****#*######***********+++++----------=============++++-.=+++++*%%@@##****##%@@@@@@@@@@@@@@@@@@@@@'."\n");
  print ('@@@@@@@@@@@@@@@@@@***+*-=+++*********########***#****++++*@@@#***###################=-+***+**#%@@%##**+##%@@@@@@@@@@@@@@@@@@@@@'."\n");
  print ('@@@@@%%%%%##**%@@@@@+***=++++*************###*********++*#@@@@@@@@%%%%%%%%%%%%%%%@@@#++*******#######*+##%%%%%%%@@@@@@@@@@@@@@@'."\n");
  print ('***%%%@@@@@%@@@@@@@@@@#*+-=++******%%%%%###########***++*@@@@@@@@@@@@%%@@%#@%########++*********#####*+#%%%%%%@@@@@@@@@@@@@@@@@'."\n");
  print ('%@@-.....=+..@@@@@@@@@@#*-*@=%#***%#....@########******%@==@@@@@@@@@@..#@..*@%%##%%@@%*+++++****################%%@@@@@@@@@@@%%'."\n");
  print ('@@@-..@@@@@@@@@@@@#%@@*+@@@..+@@#*#@=..@@@@@@+@@#@@*+@@@...@@@@*+@@@@..#@..*@@@@@@%%%@@@*++++***#######%%############%%%%%%%%%%'."\n");
  print ('@@@-...::@+..@#....-...+:@.....@#*#%=..@%......:@..:*-#:....@+.+-..%@..#@..*@@@@@@@@@%%%%*++++***######%%%%####################'."\n");
  print ('@@@-..:--@+..@#..@@@=...:@@..+%***#%=..@%..@%=..@=...:@@...@@=.....-@..#@..*@@@@@@@@@@@@@#+=+++**#####%%%%%%##################+'."\n");
  print ('@@@-..@@@@+..@#..@@@#@@..+@...#@#*%@...#%..@%=..@=@@..:@...#%..@#..-@..#@..*@@@@@@@@@@@@@@%*+++**##%%%%%%%%%################*++'."\n");
  print ('@@@*.-@@@@%.:@@.:@@@-...%@#@...@##%@...+@.:@@#.-@:...%@@@...@%..*:.*@-.@@-.%@@@@@@@@@@@@@@%@*=++*#%%%%%%%%%################*=++'."\n");
  print ('@@@@@@@@@@@@@@@@@@@@@@@@@%#+=====+*###########*++-=#%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%@#==+*#%%%%%%%%%###############+=+++'."\n");
  print ('@@@@@@@@@@@@@@@@@@@@@@@@%%#*+=======%%*******@+.*%+%%@@@@@@@@@@@@@***#@@@@@@@@@@@@@@@@@@@@%@%++*#%@=.*@=.#@%#############+=++++'."\n");
  print ('@@@@@@@@@@@@@@@@@@@@@@@@%%#*++======%........#..-@%@%%@@@@@@@@@@@@....@@@@@@@@@@@@@@@@-..@@@@###**@..=@..+@@@@%%######%%+==+++*'."\n");
  print ('@@@@@@@@@@@@@@@@@@@@@@@@%##**++======+%@..*++%..:...+@@#....@@@@@@@..@@..-...#@@....#:....**....=@@..=@..+@@:...=@@..-..%+==++#'."\n");
  print ('@@@@@@@@@@@@@@@@@@@@@@@@%##**+++====+#%@..#*=%...@=..@=..@#..@@@@@@..@@..=@+..@...%@@@...@@@@%#..+@..=@..+@..+@:.:@...%%#====*#'."\n");
  print ('@@@@@@@@@@@@@@@@@@@@@@@@%##**++++==+%@%@..#%#%..-@#..@-..::::@@@@@@..@@..#@%..@@-...-@...@@..:+..-@..=@..+#..::::+@..%+----==*#'."\n");
  print ('@@@@@@@@@@@@@@@@@@@@@@@@%##**+++==+%%#@@..#%%@..-@#..@%.....=@@@@@....@..#@%..@.....-@:...+......-@..=@..+@-.....@@..%-:::--=**'."\n");
  print ('@@@@@@@@@@@@@@@@@@@@@@@%***+=+==+++**+#@@@@@%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%@@@@:..::-=++'."\n");
  print ('@@@@@@@@@@@@@@@@@@@@%*++==++******####***#%%####*####%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%*++*#%%@@@@@%%%%@@#+#*:..::::-==+'."\n");
  print (''."\n");
}

sub mcol_splash {
  print (''."\n");
  print ('@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'."\n");
  print ('@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#+-------======*%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'."\n");
  print ('@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@+------------===========*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'."\n");
  print ('@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@=---------------==============+@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'."\n");
  print ('@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%------------------=================@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'."\n");
  print ('@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%---:::--------------===================@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'."\n");
  print ('@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@=--.      :-----------====================+@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'."\n");
  print ('@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@---:        -----------======================@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'."\n");
  print ('@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%-----        -----------=======================@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'."\n");
  print ('@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%-------     .------------========================@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'."\n");
  print ('@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@=-------------------------========================+@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'."\n");
  print ('@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@+--------------------------=========================@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'."\n");
  print ('@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@---------------------------==========================@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'."\n");
  print ('@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#-----------=##=------------===========##=============@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'."\n");
  print ('@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@+----------#@@@@*-----------=========#@@@@*===========@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'."\n");
  print ('@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@=----------+@@@@=-----------=========*@@@@============%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'."\n");
  print ('@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@=---------------------------==========================%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'."\n");
  print ('@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#---------------------------==========================@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'."\n");
  print ('@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@---------------------------==========================@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'."\n");
  print ('@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@=----------------.        ..........:-==============#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'."\n");
  print ('@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@--------------.          .............=============@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'."\n");
  print ('@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#------------.    +******#######*.....-===========@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'."\n");
  print ('@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*-----------    :@@@@@@@@@@@@@@@*.....+=========%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'."\n");
  print ('@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*----------.           .............++========@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'."\n");
  print ('@@@@@@@@@@@@@@@@@@@@@@@@@@---@@@@@@@@%----------:.         ...........:**========@@@@@@@@%==+@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'."\n");
  print ('@@@@@@@@@@@@@@@@@@@@@@@@@@---@@@@@@@@@@+----------=*******************+========#@@@@@@@@@*==+@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'."\n");
  print ('@@@@@@@@@@@@@@@@@@@@@@@@@@---+@@@@@@@@@@@-------------------==================@@@@@@@@@@@===+@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'."\n");
  print ('@@@@@@@@@@@@@@@@@@@@@@@@@@=---#@@@@@@@@@@-------------------==================@@@@@@@@@@+===*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'."\n");
  print ('@@@@@@@@@@@@@@@@@@@@@@@@@@%----=@@@@@@@@--------------------==================+@@@@@@@@=====@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'."\n");
  print ('@@@@@@@@@@@@@@@@@@@@@@@@@@@#------+*##=---------------------====================+##*=======@@@@@@@@@@++++***+#@@@@@@@@@@@@@@@@@'."\n");
  print ('@@@@@@@@@@@@@@@@@*           ------------           :-------==============================@@@@@@@@@@@+      -*@@@@@@@@@@@@@@@@@'."\n");
  print ('@@@@@@@@@@@@@@@@@+           -%=--------:           :-------============================@@@@@@@@@@@@@+      -*@@@@@@@@@@@@@@@@@'."\n");
  print ('@@@@@@@@@@@@@@@@@+            #@@%+-----            :-------=============+@*========*@@@@@@@@@@@@@@@@+      -*@@@@@@@@@@@@@@@@@'."\n");
  print ('@@@@@@@@@@@@@@@@@+            .@@@@@@@@.            :-------===============@@@@@@@@@@@@@@@@@@@@@@@@@@+      -*@@@@@@@@@@@@@@@@@'."\n");
  print ('@@@@@@@@@@@@@@@@@+             -@@@@@@+            .:------====-:::-::::-===*@@@@@@+++**++==@@@@@@@@@+      -*@@@@@@@@@@@@@@@@@'."\n");
  print ('@@@@@@@@@@@@@@@@@+              @@@@@@             .:-----=#::           :-===--+-          .+=@@@@@@+      -*@@@@@@@@@@@@@@@@@'."\n");
  print ('@@@@@@@@@@@@@@@@@+               ----.             .:------.             :-==:.                =*@@@@+      -*@@@@@@@@@@@@@@@@@'."\n");
  print ('@@@@@@@@@@@@@@@@@+               :---      ..      .:---:.          ::   ==-:         ..        .*@@@+      -*@@@@@@@@@@@@@@@@@'."\n");
  print ('@@@@@@@@@@@@@@@@@+       =        ==      .=.      .:---:       ::-===@+*+@*:      .-@@@@==      :=@@+      -*@@@@@@@@@@@@@@@@@'."\n");
  print ('@@@@@@@@@@@@@@@@@+       *+       -+      :@:      .----.      --=======%@@+      :*@@@@@@*:      *@@+      -*@@@@@@@@@@@@@@@@@'."\n");
  print ('@@@@@@@@@@@@@@@@@+       *@.             :--:      .-*@=      :+@+========-:      =#@@@@@@*-      *@@+      -*@@@@@@@@@@@@@@@@@'."\n");
  print ('@@@@@@@@@@@@@@@@@+       *@@            .---:      :#@@+      .+@@@%======-:      =#@@@@@@*-      *@@+      -#@@@@@@@@@@@@@@@@@'."\n");
  print ('@@@@@@@@@@@@@@@@@+       *@@=           :%#*:      -#@@+.      *%@@@@@@@@%#=      .*@@@@@@*       +@@+      -#@@@@@@@@@@@@@@@@@'."\n");
  print ('@@@@@@@@@@@@@@@@@+       *@@@.         :%@@@-      -%@@@+       .++***+= +@%+       +****+       *@@@+      -#@@@@@@@@@@@@@@@@@'."\n");
  print ('@@@@@@@@@@@@@@@@@+       *@@@%.       .+@@@@=      -%@@@@+               +@@#+                  +%@@@+      -#@@@@@@@@@@@@@@@@@'."\n");
  print ('@@@@@@@@@@@@@@@@@+       *@@@@+.      -@@@@@=      =%@@@@@*+             +@@@@*=              +*@@@@@+      -#@@@@@@@@@@@@@@@@@'."\n");
  print ('@@@@@@@@@@@@@@@@@*     ..#@@@@@:::::--%@@@@@+======+%@@@@@@@%**-.    .-**%@@@@@@#**-.    .=**#@@@@@@@+++++++*#@@@@@@@@@@@@@@@@@'."\n");
  print ('@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'."\n");
  print ('@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'."\n");
  print ('@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'."\n");
  print (''."\n");
}

1;
